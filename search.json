[{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://neilstats.github.io/ckbplotr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://neilstats.github.io/ckbplotr/articles/ckb_style.html","id":"examples-with-a-scatter-plot","dir":"Articles","previous_headings":"","what":"Examples with a scatter plot","title":"CKB style with ggplot","text":"Make scatter plot ggplot.  Use + ckb_style() apply CKB theme, add separated axis lines fix aspect ratio.  apply just CKB theme use axis lines.","code":"plot <- ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(size = 1) plot plot + ckb_style() plot + theme_ckb() + theme(axis.line = element_line())"},{"path":"https://neilstats.github.io/ckbplotr/articles/ckb_style.html","id":"axis-limits","dir":"Articles","previous_headings":"Examples with a scatter plot","what":"Axis limits","title":"CKB style with ggplot","text":"Set axis limits.  want gap axes, set gap = c(0, 0).","code":"plot + ckb_style(xlims = c(0, 8), ylims = c(10, 50)) plot + ckb_style(xlims = c(0, 8), ylims = c(10, 50), gap = c(0, 0))"},{"path":"https://neilstats.github.io/ckbplotr/articles/ckb_style.html","id":"aspect-ratio-and-panel-sizes","dir":"Articles","previous_headings":"Examples with a scatter plot","what":"Aspect ratio and panel sizes","title":"CKB style with ggplot","text":"Change aspect ratio plot.  Set width plot (width controls length x axis).","code":"plot + ckb_style(xlims = c(0, 8),                  ylims = c(10, 50),                  ratio = 0.3) plot + ckb_style(xlims = c(0, 8),                  ylims = c(10, 50),                  ratio = 1.5,                  width = unit(4, \"cm\"))"},{"path":"https://neilstats.github.io/ckbplotr/articles/ckb_style.html","id":"modifying-the-appearance-of-the-plot","dir":"Articles","previous_headings":"Examples with a scatter plot","what":"Modifying the appearance of the plot","title":"CKB style with ggplot","text":"colour arguments theme_ckb() ckb_style() can used change colour non-data components plot.  plot.margin arguments theme_ckb() ckb_style() can used adjust margin around plot.  wish override aspect theme applied ckb_style() theme_ckb(), can done adding theme + ckb_style(),","code":"plot + ckb_style(xlims = c(0, 8),                  ylims = c(10, 50),                  colour = \"darkred\") plot + ckb_style(xlims = c(0, 8),                  ylims = c(10, 50),                  plot.margin = margin(2, 2, 2, 2, unit = \"cm\")) plot + ckb_style(xlims = c(0, 8),                  ylims = c(10, 50)) +   theme(axis.title = element_text(colour = \"red\", face = \"plain\"))"},{"path":"https://neilstats.github.io/ckbplotr/articles/ckb_style.html","id":"warning-about-axis-limits","dir":"Articles","previous_headings":"Examples with a scatter plot","what":"Warning about axis limits","title":"CKB style with ggplot","text":"data points plotting fall outside axes, still drawn may show places axes, legend, plot title, plot margins. also warning data points fall outside whole plot area. best check xlim ylim values suitable data using function.","code":"# The xlim and ylim ranges are too narrow plot + ckb_style(xlims = c(0, 4), ylims = c(20, 50))"},{"path":"https://neilstats.github.io/ckbplotr/articles/ckb_style.html","id":"bar-chart-example","dir":"Articles","previous_headings":"","what":"Bar chart example","title":"CKB style with ggplot","text":"","code":"ggplot(mpg, aes(class)) +    geom_bar() +   ckb_style(xlims = c(0.5, 7.5),             ylims = c(0, 70),             gap = c(0.025, 0.005),             ratio = 0.5) +   theme(axis.ticks.x = element_blank())"},{"path":"https://neilstats.github.io/ckbplotr/articles/ckbplotr.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get started with ckbplotr","text":"ckbplotr R package provides functions help create style plots R using ggplot2 graphics package","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/ckbplotr.html","id":"ckb-style","dir":"Articles","previous_headings":"","what":"CKB style","title":"Get started with ckbplotr","text":"Use + ckb_style() apply CKB style ggplot. See CKB style ggplot details.","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/ckbplotr.html","id":"plots","dir":"Articles","previous_headings":"","what":"Plots","title":"Get started with ckbplotr","text":"Create plots estimates risk factor levels using shape_plot(). See Shape plots details. Create forest plots using forest_plot(). See Forest plots details. See Page layouts tips packages combining separate plots.","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/ckbplotr.html","id":"saving","dir":"Articles","previous_headings":"","what":"Saving","title":"Get started with ckbplotr","text":"See Save plots files.","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/customising_plots.html","id":"arguments","dir":"Articles","previous_headings":"","what":"Arguments","title":"Customising plots","text":"shape_plot() forest_plot() use base_size set base font line size (default: 11pts) use base_line_size separately set base thickness lines (default: base_size/22). forest_plot() use plotcolour change colour parts plot. shape_plot() use plotcolour change colour non-data aspects plot. shape_plot() forest_plot() several arguments can used change visual properties parts plot. can names columns data single values. shape_plot() use: forest_plot() use: Note col.bold, col.diamond must column names supplied data frames, others can fixed values column names. diamonds, alternatively provide character vector keys diamond argument. fill effect, shape need shape fill e.g. \"square filled\".","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/customising_plots.html","id":"adding-to-the-ggplot","dir":"Articles","previous_headings":"","what":"Adding to the ggplot","title":"Customising plots","text":"forest_plot() shape_plot() can add additional ggplot objects plot add argument. argument named list, name start object included ggplot immediately ggplot() (.e. anything else added ggplot) name end add end. argument can used, example, add additional geoms plot:  use theme customise plot:  add multiple objects, use list:","code":"hr_geom <- geom_text(aes(label = auto_estcolumn),                      size = 3,                      hjust = 0,                      nudge_y = 0.25,                      colour = \"red\")  forest_plot(my_results,             estcolumn = FALSE,             add = list(start = hr_geom)) my_theme <- theme(axis.text.x = element_text(colour = \"purple\",                                              angle = 45,                                              hjust = 1)) forest_plot(my_results,             add = list(end = my_theme)) my_parts <- list(hr_geom,                  my_theme) forest_plot(my_results,             estcolumn = FALSE,             add = list(end = my_parts))"},{"path":"https://neilstats.github.io/ckbplotr/articles/customising_plots.html","id":"the-data-function-argument","dir":"Articles","previous_headings":"","what":"The data.function argument","title":"Customising plots","text":"Use data.function argument forest_plot() change plot data immediately plotting. example, can tweak text generated estimates column:","code":"my_func <- function(dfr){   dfr$auto_estcolumn <- sub(\"\\\\(\", \"[\", dfr$auto_estcolumn)   dfr$auto_estcolumn <- sub(\"\\\\)\", \"]\", dfr$auto_estcolumn)   return(dfr) }  forest_plot(my_results,             data.function = \"my_func\")"},{"path":"https://neilstats.github.io/ckbplotr/articles/customising_plots.html","id":"adding-aesthetics-and-arguments","dir":"Articles","previous_headings":"","what":"Adding aesthetics and arguments","title":"Customising plots","text":"addaes addarg arguments shape_plot() forest_plot() can used add additional aesthetics arguments code ggplot layers created functions. arguments must named lists character strings, names elements defines aesthetics/arguments code added. shape_plot() following names add aesthetics arguments layers: forest_plot() following names add aesthetics arguments layers: duplicate aesthetics/arguments might defined created, kept priority: Aesthetic arguments specified using addaes addarg Aesthetic arguments created function arguments specified using addaes addarg arguments created function can used ‘overwrite’ code otherwise produced shape_plot() forest_plot(). example, adjusting position appearance panel headings:  Changing appearance line ‘null’:","code":"forest_plot(list(\"a) Observational\" = my_resultsA,                  \"b) Genetic\"       = my_resultsB),             col.key    = \"subgroup\",             row.labels = row_labels,             addaes = list(panel.headings = \"x = 0.5\"),             addarg = list(panel.headings = c(\"size = 4.5\",                                              \"colour = 'navyblue'\",                                              \"hjust = 0\"))) forest_plot(list(\"a) Observational\" = my_resultsA,                  \"b) Genetic\"       = my_resultsB),             col.key    = \"subgroup\",             row.labels = row_labels,             addarg = list(nullline = c(\"linetype = 'dashed'\",                                        \"colour = 'darkorange'\")))"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Forest plots","text":"forest_plot() function creates forest plot using ggplot2 graphics package. function returns plot ggplot2 code used create plot. RStudio, code used create plot shown Viewer pane (see [Plot code example] example).","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Forest plots","text":"Supply data frame estimates (default, assumed log hazard ratios) standard errors forest_plot() function: Use col.est col.stderr set columns contain estimates standard errors. default, function look columns names estimate/est/beta/loghr stderr/std.err/se. want supply confidence interval limits, set col.lci col.uci. estimates log scale, set exponentiate=FALSE.","code":"my_results <- data.frame(   subgroup   = c(\"men\", \"women\", \"35_49\", \"50_64\", \"65_79\"),   est        = c( 0.45,    0.58,    0.09,    0.35,     0.6),   se         = c( 0.07,    0.06,    0.06,    0.05,    0.08) )  forest_plot(my_results)"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"row-labels","dir":"Articles","previous_headings":"","what":"Row labels","title":"Forest plots","text":"Set col.key identify rows forest plot.   quickly add subheadings, include labels missing col.key:  automatically create groupings add subheadings, use multiple columns row.labels data frame.  Use row.labels.levels argument choose columns row labels hierarchy grouping. (Otherwise, character columns row labels data frame used.)  order rows set row.labels data frame.  Add heading row labels row.labels.heading:","code":"forest_plot(my_results, col.key = \"subgroup\") my_row_labels <- data.frame(   subgroup = c(\"men\", \"women\", \"35_49\", \"50_64\", \"65_79\"),   label    = c(\"Men\", \"Women\", \"35 - 49\", \"50 - 64\", \"65 - 79\") )  forest_plot(my_results,             col.key    = \"subgroup\",             row.labels = my_row_labels) row_labels <- data.frame(   subgroup = c(NA, \"men\", \"women\",                NA, \"35_49\", \"50_64\", \"65_79\"),   label    = c(\"Sex\", \"Men\", \"Women\",                \"Age (years)\", \"35 - 49\", \"50 - 64\", \"65 - 79\") )  forest_plot(my_results,             col.key    = \"subgroup\",             row.labels = row_labels) row_labels <- data.frame(   subgroup = c(\"men\", \"women\",                \"35_49\", \"50_64\", \"65_79\"),   group    = c(\"Sex\", \"Sex\",                \"Age (years)\", \"Age (years)\", \"Age (years)\"),   label    = c(\"Men\", \"Women\",                \"35 - 49\", \"50 - 64\", \"65 - 79\") )  forest_plot(my_results,             col.key = \"subgroup\",             row.labels = row_labels) forest_plot(my_results,             col.key           = \"subgroup\",             row.labels        = row_labels,             row.labels.levels = c(\"label\")) row_labels <- data.frame(   subgroup = c(\"women\", \"men\",                \"65_79\", \"50_64\", \"35_49\"),   group    = c(\"Sex\", \"Sex\",                \"Age (years)\", \"Age (years)\", \"Age (years)\"),   label    = c(\"Women\", \"Men\",                \"65 - 79\", \"50 - 64\", \"35 - 49\") )  forest_plot(my_results,             col.key           = \"subgroup\",             row.labels        = row_labels) forest_plot(my_results,             col.key            = \"subgroup\",             row.labels         = row_labels,             row.labels.heading = \"Subgroup\")"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"multiple-panels","dir":"Articles","previous_headings":"","what":"Multiple panels","title":"Forest plots","text":"can use split() create list data frames single data frame:","code":"my_resultsA <- my_results  my_resultsB <- data.frame(   subgroup   = c(\"men\", \"women\", \"35_49\", \"50_64\", \"65_79\"),   est        = c(0.48, 0.54, 0.06, 0.3, 0.54),   se         = c(0.12, 0.11, 0.11, 0.09, 0.15) )  forest_plot(list(\"Observational\" = my_resultsA,                  \"Genetic\"       = my_resultsB),             col.key    = \"subgroup\",             row.labels = row_labels) my_resultsAB <- data.frame(   analysis = factor(c(rep(\"Observational\", 5), rep(\"Genetic\", 5)),                     levels = c(\"Observational\", \"Genetic\")),   subgroup = c(\"men\", \"women\", \"35_49\", \"50_64\", \"65_79\",                \"men\", \"women\", \"35_49\", \"50_64\", \"65_79\"),   est      = c( 0.45, 0.58, 0.09, 0.35, 0.6,                 0.48, 0.54, 0.06, 0.3, 0.54),   se        = c(0.07, 0.06, 0.06, 0.05, 0.08,                 0.12, 0.11, 0.11, 0.09, 0.15) )  forest_plot(split(my_resultsAB, ~ analysis),             col.key    = \"subgroup\",             row.labels = row_labels)"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"adding-columns-of-text","dir":"Articles","previous_headings":"","what":"Adding columns of text","title":"Forest plots","text":"Use col.left col.right add columns text either side panel. Use col.left.heading col.right.heading customise column headings. Use col.left.hjust col.right.hjust set horizontal justification columns (0 = left, 0.5 = center, 1 = right).","code":"my_results$n <- c(834, 923, 587, 694, 476)  forest_plot(my_results,             col.key          = \"subgroup\",             row.labels       = row_labels,             col.left         = \"n\",             col.left.heading = \"No. of events\")"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"scaling-point-size","dir":"Articles","previous_headings":"","what":"Scaling point size","title":"Forest plots","text":"Set scalepoints = TRUE point size (area) proportional inverse variance (SE2) estimate.","code":"forest_plot(my_results,             col.key     = \"subgroup\",             row.labels  = row_labels,             scalepoints = TRUE)"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"confidence-interval-lines","dir":"Articles","previous_headings":"","what":"Confidence interval lines","title":"Forest plots","text":"Narrow confidence interval lines can hidden points. Set panel.width argument change appearance narrow confidence interval lines. function default try change colour plotting order confidence intervals hidden. can also supply vectors lists cicolour argument control. Note calculations identifying narrow confidence intervals designed work well shapes 15 (default) 22, symmetric confidence intervals. may completely accurate scenarios, check final output carefully.","code":"forest_plot(split(my_resultsAB, ~ analysis),             col.key     = \"subgroup\",             row.labels  = row_labels,             scalepoints = TRUE,             pointsize   = 8,             xlim        = c(0.5, 3),             xticks      = c(0.5, 1, 2, 3),             panel.width = unit(28, \"mm\")) forest_plot(split(my_resultsAB, ~ analysis),             col.key     = \"subgroup\",             row.labels  = row_labels,             scalepoints = TRUE,             pointsize   = 10,             xlim        = c(0.5, 8),                          shape       = \"square filled\",             stroke      = 0.5,             fill        = list(\"black\", \"white\"),             panel.width = unit(28, \"mm\"))"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"different-limits-on-panels","dir":"Articles","previous_headings":"","what":"Different limits on panels","title":"Forest plots","text":"forest_plot() uses ggplot facets place forest plots side--side. Facets easily different scales applied, can use forest_plot() panel arrange side--side. xlim, xticks panels lists length, forest_plot() automatically. function return list containing “figure” (graphic object whole figure) “plots” (list ggplots, one panel).  Use grid::grid.draw() draw figure (use grid::grid.newpage() clear), ggsave() save_figure() save file. Warnings: scalepoints = TRUE (minse specified plot) scaling panel--panel basis box sizes comparable panels.","code":"forest <- forest_plot(split(my_resultsAB, ~ analysis),                       col.key = \"subgroup\",                       row.labels = row_labels,                       xlim = list(c(0.5, 3 + 1e-10),                                   c(0.1, 4)),                       xticks = list(c(0.5, 1, 2, 3),                                     c(0.1, 1, 2, 4))) grid::grid.draw(forest$figure)"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"adding-heterogeneity-and-trend-test-results","dir":"Articles","previous_headings":"","what":"Adding heterogeneity and trend test results","title":"Forest plots","text":"addtext argument can used add results heterogeneity trend tests, text, text column estimates CIs. needs list data frames, length panels. Data frames contain column name specified col.key, one : column named ‘text’ containing character strings columns named ‘het_dof’, ‘het_stat’, ‘het_p’ containing character strings columns names ‘trend_stat’ ‘trend_p’ containing character strings  Note values character strings, P-values include necessary “=” “<”. automatic positioning columns spacing panels take account additional text, may need use right.space col.right.pos arguments satisfactory layout.","code":"het_trend_results <- data.frame(   analysis = factor(c(\"Observational\", \"Observational\", \"Genetic\", \"Genetic\", \"Genetic\"),          levels = c(\"Observational\", \"Genetic\")),   subgroup   = c(  \"men\",  \"35_49\",   \"men\",  \"35_49\", \"35_49\"),   het_dof    = c(    \"1\",       NA,     \"1\",       NA,      NA),   het_stat   = c( \"1.99\",       NA, \"0.136\",       NA,      NA),   het_p      = c(\"=0.16\",       NA, \"=0.71\",       NA,      NA),   trend_stat = c(     NA,   \"27.2\",      NA,   \"6.98\",      NA),   trend_p    = c(     NA, \"<0.001\",      NA, \"=0.008\",      NA),   text       = c(     NA,       NA,      NA,       NA,  \"Note\") ) forest_plot(split(my_resultsAB, ~ analysis),             col.key     = \"subgroup\",             row.labels  = row_labels,             scalepoints = TRUE,             pointsize   = 8,             xlim        = c(0.5, 3),             xticks      = c(0.5, 1, 2, 3),             panel.width = unit(28, \"mm\"),             right.space = unit(45, \"mm\"),             addtext     = split(het_trend_results, ~ analysis))"},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"customisation","dir":"Articles","previous_headings":"","what":"Customisation","title":"Forest plots","text":"See Customising plots ways customise forest plots.","code":""},{"path":[]},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"spacing","dir":"Articles","previous_headings":"Notes","what":"Spacing","title":"Forest plots","text":"function attempts set positions columns text spacing automatically. produce satisfactory layout, can use arguments col.left.pos, col.right.pos, left.space, right.space, mid.space control positions spacing manually. plot fill vertical space available. Use plot.margin change top bottom margins needed.","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"confidence-intervals","dir":"Articles","previous_headings":"Notes","what":"Confidence intervals","title":"Forest plots","text":"standard errors supplied shape_plot() forest_plot() functions, confidence intervals calculated 95% confidence intervals using Normal approximation method (critical value 1.96).","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/forest_plots.html","id":"stroke","dir":"Articles","previous_headings":"Notes","what":"Stroke","title":"Forest plots","text":"stroke argument sets stroke aesthetic plotted shapes. See https://ggplot2.tidyverse.org/articles/ggplot2-specs.html details. stroke size adds total size shape, unless stroke = 0 scaling size inverse variance slightly inaccurate (probably important things worry ).","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/save_plots.html","id":"ggsave","dir":"Articles","previous_headings":"","what":"ggsave","title":"Save plots to files","text":"easiest way save plot use ggplot2::ggsave() function. Remember shape_plot() forest_plot() return list plot code, need use $plot save just plot file. Plots created package transparent backgrounds. png file output, can use bg argument set background colour: ckbplotr function ggpreview() can used place ggsave() preview output.","code":"my_results <- data.frame(   x   = c(  12,   14, 15.5,   18),   est = c(0.05, 0.21, 0.15, 0.32),   se  = c(0.05, 0.05, 0.05, 0.05) )  my_plot <- shape_plot(my_results,                       xlims = c(10, 20),                       ylims = c(0.75, 2),                       exponentiate = TRUE,                       quiet = TRUE) ggsave(\"myplot.png\",        plot = my_plot$plot,        width = 14, height = 14, units = \"cm\") ggsave(\"myplot.png\",        plot = my_plot$plot,        width = 14, height = 14, units = \"cm\",        bg = \"white\")"},{"path":"https://neilstats.github.io/ckbplotr/articles/save_plots.html","id":"save-with-title-and-footnote","dir":"Articles","previous_headings":"","what":"Save with title and footnote","title":"Save plots to files","text":"Use save_figure() add title footer plot save file. following code save plot (sized 14 14 cm) A4 sized PDF file, title footer.  function several arguments allow customization appearance layout. example: landscape = TRUE create landscape page; set cropped file name also save plot without additional margins, title footer.","code":"save_figure(my_plot$plot,             filename   = \"Figure 1.pdf\",             title      = \"Figure 1: My example shape plot\",             footer     = \"An example footer text.\",             size       = unit(c(14, 14), \"cm\"))"},{"path":"https://neilstats.github.io/ckbplotr/articles/save_plots.html","id":"preview-the-output","dir":"Articles","previous_headings":"","what":"Preview the output","title":"Save plots to files","text":"Set preview = TRUE view preview output RStudio Viewer pane. (Instead creating file, figure saved temporary PNG file shown.)","code":"save_figure(my_plot$plot,             filename   = \"Figure 1.pdf\",             title      = \"Figure 1: My example shape plot\",             footer     = \"An example footer text.\",             size       = unit(c(14, 14), \"cm\"),             preview    = TRUE)"},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Shape plots","text":"shape_plot() function creates plot estimates confidence intervals using ggplot2 graphics package. function returns plot ggplot2 code used create plot. RStudio, code used create plot shown Viewer pane (see [Plot code example] example).","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Shape plots","text":"Supply data frame estimates standard errors shape_plot() function, specify column contains x-axis values axis limits.  estimates standard errors log scale (e.g. log hazard ratios), set exponentiate true. plot exp(estimates) use log scale axis.  Set axis titles using xlab ylab.","code":"my_results <- data.frame(   risk_factor = c(  17,    20,  23.5,    25,    29),   est         = c(   0, 0.069, 0.095, 0.182, 0.214),   se          = c(0.05, 0.048, 0.045, 0.045, 0.081) )  shape_plot(my_results,            col.x = \"risk_factor\",            xlims = c(15, 30),            ylims = c(-0.25, 0.5)) shape_plot(my_results,            col.x        = \"risk_factor\",            xlims        = c(15, 30),            ylims        = c(0.8, 1.6),            exponentiate = TRUE) shape_plot(my_results,            col.x        = \"risk_factor\",            xlims        = c(15, 30),            ylims        = c(0.8, 1.6),            exponentiate = TRUE,            xlab         = \"BMI (kg/m\\u00B2)\",            ylab         = \"Hazard Ratio (95% CI)\")"},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"using-groups","dir":"Articles","previous_headings":"","what":"Using groups","title":"Shape plots","text":"Use col.group plot results different groups (using shades grey fill colour).","code":"my_results <- data.frame(   risk_factor = c(17, 20, 23.5, 25, 29,                   18, 20.5, 22.7, 24.5, 30),   est         = c(0, 0.069, 0.095, 0.182, 0.214,                   0.32, 0.369, 0.395, 0.482, 0.514),   se          = c(0.05, 0.048, 0.045, 0.045, 0.061,                   0.04, 0.049, 0.045, 0.042, 0.063),   group       = factor(rep(c(\"Women\", \"Men\"), each = 5)) )  shape_plot(my_results,            col.x        = \"risk_factor\",            xlims        = c(15, 30),            ylims        = c(0.8, 2),            exponentiate = TRUE,            xlab         = \"BMI (kg/m\\u00B2)\",            ylab         = \"Hazard Ratio (95% CI)\",            col.group    = \"group\",            ciunder      = TRUE)"},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"adding-lines","dir":"Articles","previous_headings":"","what":"Adding lines","title":"Shape plots","text":"Use lines add lines (linear fit estimates plotted scale, weighted inverse variance) group.","code":"shape_plot(my_results,            col.x        = \"risk_factor\",            xlims        = c(15, 30),            ylims        = c(0.8, 2),            exponentiate = TRUE,            xlab         = \"BMI (kg/m\\u00B2)\",            ylab         = \"Hazard Ratio (95% CI)\",            col.group    = \"group\",            ciunder      = TRUE,            lines        = TRUE)"},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"categorical-risk-factor","dir":"Articles","previous_headings":"","what":"Categorical risk factor","title":"Shape plots","text":"risk factor can factor. case, x-axis coordinates 1, 2, 3, .. suitable x-axis limits 0.5 number categories plus 0.5. may need add position arguments points, intervals text overlap.","code":"smoking_results <- data.frame(   smk_cat = factor(c(\"Never\", \"Ex\", \"Current\"),                    levels = c(\"Never\", \"Ex\", \"Current\")),   est         = c(0, 0.362, 0.814),   se          = c(0.05, 0.09, 0.041) )  shape_plot(smoking_results,            col.x        = \"smk_cat\",            xlims        = c(0.5, 3.5),            ylims        = c(0.5, 4),            ybreaks      = c(0.5, 1, 2, 4),             xlab         = \"Smoking\",            ylab         = \"Hazard Ratio (95% CI)\",            exponentiate = TRUE)"},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"scaling-point-size","dir":"Articles","previous_headings":"","what":"Scaling point size","title":"Shape plots","text":"Set scalepoints = TRUE point size (area) proportional inverse variance (SE2) estimate.","code":"my_results <- data.frame(   risk_factor = c(19, 24, 29),   est         = c(0, 0.095, 0.214),   se          = c(0.02, 0.018, 0.1) )  shape_plot(my_results,            col.x        = \"risk_factor\",            xlims        = c(15, 30),            ylims        = c(0.8, 2),            exponentiate = TRUE,            xlab         = \"BMI (kg/m\\u00B2)\",            ylab         = \"Hazard Ratio (95% CI)\",            scalepoints  = TRUE)"},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"confidence-intervals","dir":"Articles","previous_headings":"","what":"Confidence intervals","title":"Shape plots","text":"Narrow confidence interval lines can hidden points. Set height argument change appearance short confidence interval lines. function default try change colour plotting order confidence intervals hidden. can also supply vectors lists cicolour argument control. Note calculations identifying narrow confidence intervals designed work well shapes 15 (default) 22, symmetric confidence intervals. may completely accurate scenarios, check final output carefully.","code":"my_results <- data.frame(   risk_factor = c(19, 24, 29),   est         = c(0, 0.095, 0.214),   se          = c(0.02, 0.018, 0.1) )  shape_plot(my_results,            col.x        = \"risk_factor\",            xlims        = c(15, 30),            ylims        = c(0.8, 2),            exponentiate = TRUE,            xlab         = \"BMI (kg/m\\u00B2)\",            ylab         = \"Hazard Ratio (95% CI)\",            scalepoints  = TRUE,            pointsize    = 6,            height       = unit(5, \"cm\"))"},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"customisation","dir":"Articles","previous_headings":"","what":"Customisation","title":"Shape plots","text":"See Customising plots ways customise shape plots.","code":""},{"path":[]},{"path":"https://neilstats.github.io/ckbplotr/articles/shape_plots.html","id":"stroke","dir":"Articles","previous_headings":"Notes","what":"Stroke","title":"Shape plots","text":"stroke argument sets stroke aesthetic plotted shapes. See https://ggplot2.tidyverse.org/articles/ggplot2-specs.html details. stroke size adds total size shape, unless stroke = 0 scaling size inverse variance slightly inaccurate (probably important things worry ).","code":""},{"path":"https://neilstats.github.io/ckbplotr/articles/web-only/generated_code.html","id":"shape-plot","dir":"Articles > Web-only","previous_headings":"","what":"Shape plot","title":"Generated code","text":"code now stored shape$code shown RStudio Viewer pane :","code":"my_results <- data.frame(   x   = c(  12,   14, 15.5,   18),   est = c(0.05, 0.21, 0.15, 0.32),   se  = c(0.05, 0.05, 0.05, 0.05) )  shape <- shape_plot(my_results,                     xlims        = c(10, 20),                     ylims        = c(0.75, 2),                     exponentiate = TRUE,                     printplot    = FALSE) library(ggplot2)  datatoplot <- my_results  # Create the plot with main aesthetics plot <- ggplot(datatoplot, aes(x = x, y = exp(est))) +    # Plot the point estimates   geom_point(aes(size   = 1),              shape  = 15,              colour = \"black\",              fill = \"black\",              stroke = 0.5) +      # Plot point estimates text   geom_text(aes(y     = exp(est+1.96*se),                 label = format(round(exp(est), 2), nsmall = 2)),             vjust = -0.8,             size  = 3.092846,             colour = \"black\") +      # Plot the CIs   geom_linerange(aes(ymin = exp(est-1.96*se),                      ymax = exp(est+1.96*se)),                  linewidth = 0.5) +      # Set the scale for the size of boxes   scale_radius(guide  = \"none\",                limits = c(0, NA_real_),                range  = c(0, 3)) +      # Use identity for aesthetic scales   scale_shape_identity() +   scale_colour_identity() +   scale_fill_identity() +      # Set the y-axis scale   scale_y_continuous(trans = \"log\") +      # Add titles   xlab(\"Risk factor\") +   ylab(\"Estimate (95% CI)\") +      # Plot like a CKB plot   ckbplotr::ckb_style(xlims          = c(10, 20),                       ylims          = c(0.75, 2),                       gap            = c(0.025, 0.025),                       ext            = c(0.025, 0.025),                       ratio          = 1.5,                       base_size      = 11,                       base_line_size = 0.5,                       colour         = \"black\") +      # Add theme   theme(legend.position = \"top\")"},{"path":"https://neilstats.github.io/ckbplotr/articles/web-only/generated_code.html","id":"forest-plot","dir":"Articles > Web-only","previous_headings":"","what":"Forest plot","title":"Generated code","text":"code now stored forest$code shown RStudio Viewer pane :","code":"my_results <- data.frame(   subgroup   = c(\"men\", \"women\", \"35_49\", \"50_64\", \"65_79\"),   est        = c( 0.45,    0.58,    0.09,    0.35,     0.6),   se         = c( 0.07,    0.06,    0.06,    0.05,    0.08) )  forest <- forest_plot(my_results, printplot = FALSE) library(ggplot2)  # Prepare data to be plotted using ckbplotr::forest_data() datatoplot <- ckbplotr::forest_data(panels = my_results,                                     panel.names = \"1\",                                     col.estimate = \"est\",                                     col.stderr = \"se\")  # Create the ggplot ggplot(datatoplot, aes(y = row, x = estimate_transformed)) +    # Put the different panels in side-by-side plots using facets   facet_wrap(vars(panel), nrow = 1) +      # Add a line at null effect   annotate(geom      = \"segment\",            y         = 0.7,            yend      = Inf,            x         = 1,            xend      = 1,            linewidth = 0.5,            colour    = \"black\") +      # Plot points at the transformed estimates   geom_point(data   = ~ dplyr::filter(.x,                                       estimate_transformed > 0.8,                                       estimate_transformed < 2.2,                                       !as_diamond),              shape  = 15,              size   = 3,              colour = \"black\",              fill   = \"black\",              stroke = 0,              na.rm  = TRUE) +      # Plot the CIs   geom_errorbar(aes(xmin = pmin(pmax(lci_transformed, 0.8), 2.2),                     xmax = pmin(pmax(uci_transformed, 0.8), 2.2)),                 data = ~ dplyr::filter(.x, !is.na(estimate_transformed), !as_diamond),                 colour    = \"black\",                 width     = 0,                 linewidth = 0.5,                 na.rm     = TRUE) +      # Add columns to right side of panels   ## column auto_estcolumn   ckbplotr::geom_text_move(aes(y = row,                                x = 2.2,                                label = `auto_estcolumn`),                            move_x  = unit(0.9, \"mm\"),                            hjust   = 0,                            size    = 3.092846,                            colour  = \"black\",                            na.rm   = TRUE,                            parse   = FALSE) +   ckbplotr::geom_text_move(aes(y     = - 0,                                x     = 2.2,                                label = title),                            move_x  = unit(0.9, \"mm\"),                            hjust    = 0,                            size     = 3.092846,                            colour   = \"black\",                            fontface = \"bold\",                            data = ~ dplyr::tibble(panel = sort(unique(.[[\"panel\"]])),                                                   title = \"HR (95% CI)\")) +      # Add xlab below each axis   geom_text(aes(y = Inf,                 x = 1.32665,,                 label = xlab),             hjust    = 0.5,             size     = 3.092846,             colour   = \"black\",             vjust    = 4.4,             fontface = \"bold\",             data = ~ dplyr::tibble(panel = sort(unique(.[[\"panel\"]])),                                    xlab = \"HR (95% CI)\")) +      # Set coordinate system   coord_cartesian(clip = \"off\",                   xlim = c(0.8, 2.2)) +      # Set the scale for the x axis (the estimates and CIs)   scale_x_continuous(trans  = \"log\",                      limits = c(0.8, 2.2),                      breaks = c(0.5, 1, 1.5, 2, 2.5),                      expand = c(0,0)) +      # Set the scale for the y axis (the rows)   scale_y_continuous(trans = \"reverse\",                      breaks = attr(datatoplot, \"rowlabels\")$row,                      labels = attr(datatoplot, \"rowlabels\")$row.label,                      limits = c(max(attr(datatoplot, \"rowlabels\")$row) + 0.7, NA),                      expand = c(0,0)) +      # Control the overall look of the plot   theme(text             = element_text(size = 11, colour = \"black\"),         line             = element_line(linewidth = 0.5),         panel.background = element_blank(),         panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         plot.title       = element_blank(),         axis.line.x      = element_line(colour = \"black\", linewidth = 0.5, lineend = \"round\"),         axis.title       = element_blank(),         axis.ticks.x     = element_line(colour = \"black\"),         axis.text.x      = element_text(colour = \"black\",,                                         margin = margin(t = 4.4),                                         vjust  = 1),         axis.ticks.y     = element_blank(),         axis.line.y      = element_blank(),         axis.text.y      = ggtext::element_markdown(hjust  = 0,                                                     colour = \"black\",                                                     margin = margin(r = 2.9, unit = \"mm\")),         panel.border     = element_blank(),         panel.spacing    = unit(24.5, \"mm\") + unit(5, \"mm\") + unit(2.9, \"mm\"),         strip.background = element_blank(),         strip.placement  = \"outside\",         strip.text       = element_blank(),         legend.position  = \"none\",         plot.background  = element_blank(),         plot.margin      = margin(8, 8, 8, 8, \"mm\") + unit(c(0, 24.5, 0, 0), \"mm\"))"},{"path":"https://neilstats.github.io/ckbplotr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Neil Wright. Author, maintainer.","code":""},{"path":"https://neilstats.github.io/ckbplotr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wright N (2023). ckbplotr: Create CKB Plots. R package version 0.10.0, https://doi.org/10.5281/zenodo.6382217, https://neilstats.github.io/ckbplotr/.","code":"@Manual{,   title = {ckbplotr: Create CKB Plots},   author = {Neil Wright},   year = {2023},   note = {R package version 0.10.0, https://doi.org/10.5281/zenodo.6382217},   url = {https://neilstats.github.io/ckbplotr/}, }"},{"path":"https://neilstats.github.io/ckbplotr/index.html","id":"ckbplotr-","dir":"","previous_headings":"","what":"Create CKB Plots","title":"Create CKB Plots","text":"ckbplotr provides functions help create style plots R. developed , primarily , China Kadoorie Biobank researchers.","code":""},{"path":"https://neilstats.github.io/ckbplotr/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Create CKB Plots","text":"package can used apply CKB style create plots generating ggplot2 code. Functions create plots (shape_plot() forest_plot()) return : ggplot2 plot. ggplot2 code used create plot, allowing users see exactly plot created adapt code uses. RStudio code also shown Viewer pane.","code":""},{"path":"https://neilstats.github.io/ckbplotr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create CKB Plots","text":"Install latest version ckbplotr neilstats R-universe: also install dependencies CRAN repository.","code":"install.packages('ckbplotr',                  repos = c('https://neilstats.r-universe.dev',                            'https://cloud.r-project.org'))"},{"path":"https://neilstats.github.io/ckbplotr/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"Create CKB Plots","text":"Read vignette(\"ckbplotr\") get started.","code":""},{"path":"https://neilstats.github.io/ckbplotr/index.html","id":"citing-ckbplotr","dir":"","previous_headings":"","what":"Citing ckbplotr","title":"Create CKB Plots","text":"find package useful, please consider citing : Wright N (2023). ckbplotr: Create CKB Plots. https://neilstats.github.io/ckbplotr/, https://doi.org/10.5281/zenodo.6382217.","code":""},{"path":"https://neilstats.github.io/ckbplotr/index.html","id":"package-development","dir":"","previous_headings":"","what":"Package development","title":"Create CKB Plots","text":"package development. find error bug suggestion improvement please create issue GitHub contact author @NeilStats@fediscience.org.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/ckb_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a ggplot into CKB style — ckb_style","title":"Make a ggplot into CKB style — ckb_style","text":"Make ggplot CKB style","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/ckb_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a ggplot into CKB style — ckb_style","text":"","code":"ckb_style(   xlims = NULL,   ylims = NULL,   gap = c(0.025, 0.025),   ext = c(0, 0),   ratio = 1.5,   width = NULL,   height = NULL,   base_size = 11,   base_line_size = base_size/22,   colour = \"black\",   plot.margin = margin(0.5, 1.5, 0.5, 0.5, \"lines\"),   axes = \"both\" )"},{"path":"https://neilstats.github.io/ckbplotr/reference/ckb_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a ggplot into CKB style — ckb_style","text":"xlims numeric vector length two. limits x-axis. ylims numeric vector length two. limits y-axis. gap numeric vector length two. gap plotting area axis left bottom plot, proportion x-axis length. (Default: c(0.025, 0.025)) ext numeric vector length two. extensions add right top plot, proportion x-axis length. (Default: c(0, 0)) ratio ratio (y-axis:x-axis) use plot. Ignored width height set. (Default: 1.5) width grid::unit object set width plot (including gap extension). height grid::unit object set height plot (including gap extension). base_size base font size, given pts. base_line_size base size line elements colour Colour non-data aspects plot. (Default: \"black\") plot.margin Margin around entire plot (Default: margin(0.5, 0, 0.5, 0, \"lines\")) axes Choice axis lines add plot, one \"\", \"x\" \"y\". (Default: \"\")","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/ckbplotr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ckbplotr: Create CKB Plots — ckbplotr-package","title":"ckbplotr: Create CKB Plots — ckbplotr-package","text":"ckbplotr provides functions help create style plots R. developed , primarily , China Kadoorie Biobank researchers.","code":""},{"path":[]},{"path":"https://neilstats.github.io/ckbplotr/reference/ckbplotr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ckbplotr: Create CKB Plots — ckbplotr-package","text":"Maintainer: Neil Wright neil.wright@ndph.ox.ac.uk","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/fix_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix panel width and height of a forest plot — fix_panel","title":"Fix panel width and height of a forest plot — fix_panel","text":"ckb_style(), plot_like_ckb() shape_plot() width height arguments forest_plot() panel.width panel.height arguments. use ggh4x::force_panelsizes() fix panel sizes.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/fix_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix panel width and height of a forest plot — fix_panel","text":"","code":"fix_panel(plot, width = NULL, height = NULL)"},{"path":"https://neilstats.github.io/ckbplotr/reference/fix_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix panel width and height of a forest plot — fix_panel","text":"plot plot (created forest_plot()). width Width panels. (e.g unit(50, \"mm\")) height Height panels. (e.g unit(150, \"mm\"))","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/fix_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix panel width and height of a forest plot — fix_panel","text":"gtable object","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares data set for a forest plot — forest_data","title":"Prepares data set for a forest plot — forest_data","text":"Prepares data set forest plot","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares data set for a forest plot — forest_data","text":"","code":"forest_data(   panels,   panel.names = NULL,   col.key = \"key\",   col.estimate = \"estimate\",   col.stderr = \"stderr\",   col.lci = NULL,   col.uci = NULL,   col.left = NULL,   col.right = NULL,   col.keep = NULL,   row.labels = NULL,   row.labels.levels = NULL,   rows = NULL,   row.labels.space = c(0, 1, 0, 0),   ci.delim = \", \",   digits = 2,   exponentiate = TRUE,   scalepoints = FALSE,   minse = NULL,   addtext = NULL,   diamond = NULL,   col.diamond = NULL,   bold.labels = NULL )"},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares data set for a forest plot — forest_data","text":"panels list data frames. include columns point estimates, standard errors confidence interval limits. specify row.labels data frame, must also contain key column name (can specified col.key). panel.names character vector. names used forest plot panel. none provided, numbered 1, 2, 3 ... col.key Name column links results given data frame provided panels labels given row.labels. row.labels data frame given, column used row labels. (Default: \"key\") col.estimate, col.stderr, col.lci, col.uci Names columns : point estimates, standard errors, lower upper limits confidence intervals. col.left, col.right Names columns printed left/right plot. col.keep Names additional columns kept returned data frame. row.labels data frame contains labels used rows plot. Use NA lower level heading required given row. row.labels.levels character vector. names columns row.labels use headings/subheadings/labels labelling rows. rows set, rows matching labels (first level) included. row.labels.space numeric vector specifying space row label heading, end row label heading 'section'. (Default: c(0, 1, 0, 0)) ci.delim Character string separate lower upper limits confidence interval. (Default: \", \") digits Number digits decimal point show estimates confidence intervals. (Default: 2) exponentiate Exponentiate estimates (CIs) plotting. (Default: TRUE) scalepoints points scaled inverse standard error? (Default: FALSE) minse Minimum standard error use scaling point size. (Default use minimum data.) addtext list data frames. List must length panels. Data frames contain column name specified col.key, one : column named 'text' containing character strings columns named 'het_dof', 'het_stat', 'het_p' containing character strings columns names 'trend_stat' 'trend_p' containing character strings character strings, heterogeneity test, trend test results plotted column estimates CIs, row key given col.key column. diamond Alternative col.diamond. character vectors identify rows (using key values) estimate CI plotted using diamond. col.diamond Plot estimates CIs diamonds. Name column logical values. bold.labels character vector identifying row labels (using key values) additionally bold. (Default: NULL)","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares data set for a forest plot — forest_data","text":"dataset forest plot can generated.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a forest plot with ggplot2 — forest_plot","title":"Make a forest plot with ggplot2 — forest_plot","text":"Creates forest plot ggplot","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a forest plot with ggplot2 — forest_plot","text":"","code":"forest_plot(   panels,   row.labels = NULL,   row.labels.levels = NULL,   rows = NULL,   row.labels.heading = NULL,   row.labels.space = c(0, 1, 0, 0),   exponentiate = TRUE,   logscale = exponentiate,   panel.names = NULL,   panel.headings = NULL,   col.key = \"key\",   col.estimate = c(\"estimate\", \"est\", \"beta\", \"loghr\"),   col.stderr = c(\"stderr\", \"std.err\", \"se\"),   col.lci = NULL,   col.uci = NULL,   col.left = NULL,   col.right = NULL,   col.right.parse = FALSE,   col.left.heading = \"\",   col.right.heading = xlab,   col.left.pos = NULL,   col.right.pos = NULL,   col.left.hjust = 1,   col.right.hjust = 0,   col.left.gap = c(\"I\", \"W\"),   col.right.gap = c(\"I\", \"W\"),   col.heading.space = 0,   estcolumn = TRUE,   col.keep = NULL,   ci.delim = \", \",   digits = 2,   title = \"\",   xlab = \"HR (95% CI)\",   xlim = NULL,   xticks = NULL,   nullval = NULL,   col.diamond = NULL,   diamond = NULL,   col.bold = NULL,   bold.labels = NULL,   scalepoints = FALSE,   minse = NULL,   pointsize = 3,   shape = 15,   plotcolour = \"black\",   colour = plotcolour,   cicolour = colour,   fill = colour,   ciunder = NULL,   addtext = NULL,   bottom.space = 0.7,   left.space = NULL,   right.space = NULL,   mid.space = unit(5, \"mm\"),   plot.margin = margin(8, 8, 8, 8, \"mm\"),   panel.width = NULL,   panel.height = NULL,   base_size = 11,   base_line_size = base_size/22,   stroke = 0,   diamonds.linewidth = base_line_size,   quiet = FALSE,   printplot = !quiet,   showcode = !quiet,   data.function = NULL,   addaes = NULL,   addarg = NULL,   add = NULL,   envir = NULL,   blankrows = NULL )"},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a forest plot with ggplot2 — forest_plot","text":"panels list data frames. include columns point estimates, standard errors confidence interval limits. specify row.labels data frame, must also contain key column name (can specified col.key). row.labels data frame contains labels used rows plot. Use NA lower level heading required given row. row.labels.levels character vector. names columns row.labels use headings/subheadings/labels labelling rows. rows set, rows matching labels (first level) included. row.labels.heading Title placed row labels. row.labels.space numeric vector specifying space row label heading, end row label heading 'section'. (Default: c(0, 1, 0, 0)) exponentiate Exponentiate estimates (CIs) plotting. (Default: TRUE) logscale Use log scale axis, add line null effect. (Default: exponentiate) panel.names character vector. names used forest plot panel. none provided, numbered 1, 2, 3 ... panel.headings Titles placed forest plot. col.key Name column links results given data frame provided panels labels given row.labels. row.labels data frame given, column used row labels. (Default: \"key\") col.estimate, col.stderr, col.lci, col.uci Names columns : point estimates, standard errors, lower upper limits confidence intervals. col.left, col.right Names columns printed left/right plot. col.right.parse logical vector, length col.right (+ 1 estcolumn = TRUE). contents columns parsed expressions. (Default: FALSE) col.left.heading, col.right.heading Headings columns. col.left.pos, col.right.pos unit vector position col.left/col.right columns. col.left.hjust, col.right.hjust numeric vector. horizontal justification col.left/col.right columns. (Default: 1) col.left.gap, col.right.gap character vector length two. two characters control gaps first text column panel, successive text columns. (Default: c(\"\", \"W\")) col.heading.space Position titles given col.left.heading col.right.heading. Increase move . (Default: 0) estcolumn Include column estimates confidence intervals right plot. (Default: TRUE) col.keep Names additional columns kept returned data frame. ci.delim Character string separate lower upper limits confidence interval. (Default: \", \") digits Number digits decimal point show estimates confidence intervals. (Default: 2) title Title appear top plot. xlab Label appear x-axis. (Default: \"HR (95% CI)\") xlim numeric vector. limits x axis. xticks numeric vector. tick points x axis. nullval Add vertical reference line value. (logscale == TRUE default added 1, use NA plot line.) col.diamond Plot estimates CIs diamonds. Name column logical values. diamond Alternative col.diamond. character vectors identify rows (using key values) estimate CI plotted using diamond. col.bold Plot text bold. Name column logical values. bold.labels character vector identifying row labels (using key values) additionally bold. (Default: NULL) scalepoints points scaled inverse standard error? (Default: FALSE) minse Minimum standard error use scaling point size. (Default use minimum data.) pointsize (largest) size box use plotting point estimates. (Default: 3) shape Shape points. integer, name column integers. (Default: 15 (square)) plotcolour Colour parts plot. (Default: \"black\") colour Colour points. Name colour, name column colour names. (Default use plotcolour.) cicolour Colour CI lines. Colour CI lines. Name colour, name column colour names. (Default use colour.) fill Fill colour points. Name colour, name column colour names. (Default use colour.) ciunder Plot CI lines points. logical value, name column logical values. (Default plot CI lines points.) addtext list data frames. List must length panels. Data frames contain column name specified col.key, one : column named 'text' containing character strings columns named 'het_dof', 'het_stat', 'het_p' containing character strings columns names 'trend_stat' 'trend_p' containing character strings character strings, heterogeneity test, trend test results plotted column estimates CIs, row key given col.key column. bottom.space Space bottom row axis. (Default: 0.7) left.space, right.space, mid.space Space left/right/panels. (Default mid.space: unit(5, \"mm\")) plot.margin Plot margin, given margin(top, right, bottom, left, units). (Default: margin(8, 8, 8, 8, \"mm\")) panel.width, panel.height Set width/height panels. grid::unit object, numeric given assumed mm. panel.width used, alsovapply different formatting narrow CIs. base_size base font size, given pts. base_line_size base size line elements stroke Size outline shapes. (Default: 0) diamonds.linewidth Line width diamonds. (Default: base_line_size) quiet Set TRUE print plot show generated code RStudio 'Viewer' pane. (Default: FALSE) printplot Print plot. (Default: !quiet) showcode Show ggplot2 code generate plot RStudio 'Viewer' pane. (Default: !quiet) data.function Name function apply data frame plotting. addaes, addarg, add Methods customising plot. See documentation details. envir Environment evaluate plot code. May useful calling function inside another function. blankrows DEPRECATED","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a forest plot with ggplot2 — forest_plot","text":"list: plot plot code ggplot2 code generate plot","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/forest_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a forest plot with ggplot2 — forest_plot","text":"function returns plot ggplot2 code create plot. RStudio, ggplot2 code shown viewer.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/geom_text_move.html","id":null,"dir":"Reference","previous_headings":"","what":"Text that can be moved — geom_text_move","title":"Text that can be moved — geom_text_move","text":"geom adds fixed horizontal /vertical move ggplot2::geom_text()","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/geom_text_move.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text that can be moved — geom_text_move","text":"","code":"geom_text_move(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   parse = FALSE,   nudge_x = 0,   nudge_y = 0,   move_x = unit(0, \"pt\"),   move_y = unit(0, \"pt\"),   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://neilstats.github.io/ckbplotr/reference/geom_text_move.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text that can be moved — geom_text_move","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string, result call position adjustment function. jointly specified nudge_x nudge_y. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. parse TRUE, labels parsed expressions displayed described ?plotmath. nudge_x, nudge_y Horizontal vertical adjustment nudge labels . Useful offsetting text points, particularly discrete scales. jointly specified position. move_x Unit value move text horizontally (Default: unit(0, \"pt\")) move_y Unit value move text vertically (Default: unit(0, \"pt\")) check_overlap TRUE, text overlaps previous text layer plotted. check_overlap happens draw time order data. Therefore data arranged label column calling geom_text(). Note argument supported geom_label(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/geom_text_move.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Text that can be moved — geom_text_move","text":"geom_text_move() understands aesthetics ggplot2::geom_text()","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/ggpreview.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot preview and display it in the Viewer pane. — ggpreview","title":"Create a plot preview and display it in the Viewer pane. — ggpreview","text":"function saves ggplot2 plot temporary PNG file embeds HTML page, opened Viewer pane.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/ggpreview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot preview and display it in the Viewer pane. — ggpreview","text":"","code":"ggpreview(...)"},{"path":"https://neilstats.github.io/ckbplotr/reference/ggpreview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot preview and display it in the Viewer pane. — ggpreview","text":"... Arguments passed ggsave PNG device function.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/ggpreview.html","id":"device","dir":"Reference","previous_headings":"","what":"Device","title":"Create a plot preview and display it in the Viewer pane. — ggpreview","text":"plot saved using ggsave png device, regardless specified call, arguments used ggsave png ignored.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://neilstats.github.io/ckbplotr/reference/plot_like_ckb.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a ggplot into CKB style — plot_like_ckb","title":"Make a ggplot into CKB style — plot_like_ckb","text":"Make ggplot CKB style","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/plot_like_ckb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a ggplot into CKB style — plot_like_ckb","text":"","code":"plot_like_ckb(plot, ...)"},{"path":"https://neilstats.github.io/ckbplotr/reference/plot_like_ckb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a ggplot into CKB style — plot_like_ckb","text":"plot ggplot2 plot ... Arguments passed ckb_style()","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/plot_like_ckb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a ggplot into CKB style — plot_like_ckb","text":"ggplot2 plot.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/prepare_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare figure for saving — prepare_figure","title":"Prepare figure for saving — prepare_figure","text":"Prepare figure saving","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/prepare_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare figure for saving — prepare_figure","text":"","code":"prepare_figure(   figure,   title = \"\",   title.pos = grid::unit.c(unit(1.27/2, \"cm\"), unit(1, \"npc\") - unit(1.27/2, \"cm\")),   title.just = c(0, 1),   title.gpar = list(fontsize = 12, fontface = \"bold\"),   footer = \"\",   footer.pos = grid::unit.c(unit(1.27/2, \"cm\"), unit(1.27/3, \"cm\")),   footer.just = c(0, 0),   footer.gpar = list(fontsize = 9),   margin = unit(c(2.27, 1.27, 1.27, 1.27), units = \"cm\"),   size = NULL,   pagesize = c(\"A4\", \"A5\"),   landscape = FALSE,   pagedim = NULL )"},{"path":"https://neilstats.github.io/ckbplotr/reference/prepare_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare figure for saving — prepare_figure","text":"figure Plot (graphical object). title Title added page. (Default: \"\") title.pos Position title text. Default 1/4 inch top left page. (Default: unit.c(unit(1.27/2, \"cm\"), unit(1, \"npc\") - unit(1.27/2, \"cm\"))) title.just Justification title text. (Default: c(0, 1)) title.gpar Graphical parameters title. (Default: list(fontsize = 12, fontface = \"bold\")) footer Footer added page. (Default: \"\") footer.pos Position footer text. Default 1/6 inch bottom 1/4 inch left page. (Default: unit.c(unit(1.27/2, \"cm\"), unit(1.27/3, \"cm\"))) footer.just Justification footer text. (Default: c(0, 0)) footer.gpar Graphical parameters footer. (Default: list(fontsize = 9)) margin Margin placed around plot. Default 2.27cm top, 1.27cm (1/2 inch) sides. (Default: unit(c(2.27, 1.27, 1.27, 1.27), units = \"cm\")) size unit vector length two (width, height). Size plot (width/height larger page weight/height minus margins ignored), centred within margins. default, plot fill space within margins. pagesize Page size PDF output: \"A4\" \"A5\". (Default: \"A4\") landscape Landscape page orientation? (Default: False) pagedim Dimensions (width, height) PDF output. Overrides pagesize landscape arguments used.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/save_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Output plots as files — save_figure","title":"Output plots as files — save_figure","text":"Output plots files","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/save_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output plots as files — save_figure","text":"","code":"save_figure(   figure,   filename,   cropped = NULL,   args = NULL,   args_cropped = NULL,   preview = FALSE,   ... )"},{"path":"https://neilstats.github.io/ckbplotr/reference/save_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output plots as files — save_figure","text":"figure Plot (graphical object). filename Name file create. cropped Name second output file figure without margins title. args List arguments passed ggplot2::ggsave() main figure. args_cropped List arguments passed ggplot2::ggsave() cropped figure. preview Preview output RStudio Viewer pane. (Default: False) ... arguments passed prepare_figure.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/shape_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a shape plot with ggplot2 — shape_plot","title":"Make a shape plot with ggplot2 — shape_plot","text":"Make shape plot ggplot2","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/shape_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a shape plot with ggplot2 — shape_plot","text":"","code":"shape_plot(   data,   col.x = \"x\",   col.estimate = c(\"estimate\", \"est\", \"beta\", \"loghr\"),   col.stderr = c(\"stderr\", \"std.err\", \"se\"),   col.lci = NULL,   col.uci = NULL,   col.n = NULL,   exponentiate = FALSE,   logscale = exponentiate,   scalepoints = FALSE,   digits = 2,   minse = NA,   pointsize = 3,   col.group = NULL,   shape = 15,   plotcolour = \"black\",   colour = plotcolour,   cicolour = colour,   fill = colour,   ciunder = NULL,   lines = FALSE,   xlims,   ylims,   height = NULL,   width = NULL,   gap = c(0.025, 0.025),   ext = c(0.025, 0.025),   ratio = 1.5,   base_size = 11,   base_line_size = base_size/22,   stroke = base_size/22,   xbreaks = NULL,   ybreaks = NULL,   xlab = \"Risk factor\",   ylab = \"Estimate (95% CI)\",   legend.name = \"\",   legend.position = \"top\",   title = NULL,   quiet = FALSE,   printplot = !quiet,   showcode = !quiet,   addaes = NULL,   addarg = NULL,   add = NULL,   envir = NULL )"},{"path":"https://neilstats.github.io/ckbplotr/reference/shape_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a shape plot with ggplot2 — shape_plot","text":"data data frame containing estimates plotted. col.x Name column provides x-axis value (e.g. exposure, risk factor, dependent variable). (Default: \"x\") col.estimate Name column provides point estimates. (Default: \"estimate\") col.stderr Name column provides standard errors. (Default: \"stderr\") col.lci Name column provides lower limit confidence intervals. col.uci Name column provides upper limit confidence intervals. col.n Name column provides number plotted CIs. exponentiate Exponentiate estimates (CIs) plotting, use log scale axis. (Default: FALSE) logscale Use log scale vertical axis. (Default: exponentiate) scalepoints points scaled inverse standard error? (Default: FALSE) digits Number digits use text estimates. minse Minimum standard error use scaling point size. (Default use minimum data.) pointsize (largest) size box use plotting point estimates. (Default: 3) col.group Name column groups estimates. (Default: NULL) shape Shape points. integer, name column integers. (Default: 15) plotcolour Colour non-data aspects plot. (Default: \"black\") colour Colour points. Name colour, name column colour names. (Default use plotcolour) cicolour Colour CI lines. Colour CI lines. Name colour, name column colour names. (Default use plotcolour) fill Fill colour points. Fill colour points. Name colour, name column colour names. (Default use plotcolour) ciunder Plot CI lines points. logical value, name column logical values. (Default plot CI lines points.) lines Plot lines (linear fit estimates, weighted inverse variance). (Default: FALSE) xlims numeric vector length two. limits x-axis. ylims numeric vector length two. limits y-axis. height Panel height use apply different formatting short CIs. grid::unit() object, numeric assumed mm. width Panel width.grid::unit() object, numeric assumed mm. gap numeric vector length two. gap plotting area axis left bottom plot, proportion x-axis length. (Default: c(0.025, 0.025)) ext numeric vector length two. extensions add right top plot, proportion x-axis length. (Default: c(0.025, 0.025)) ratio ratio (y-axis:x-axis) use plot. (Default: 1.5) base_size base font size, given pts. base_line_size base size line elements stroke Size outline shapes. (Default: base_size/22) xbreaks Breaks x axis. Passed ggplots::scale_x_continuous. (Default: NULL) ybreaks Breaks y axis. Passed ggplots::scale_y_continuous. (Default: NULL) xlab Label x-axis. (Default: \"Risk factor\") ylab Label y-axis. (Default: \"Estimate (95% CI)\") legend.name name colour scale/legend groups. (Default: \"\") legend.position Position legend groups (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector). (Default: \"top\") title Plot title. (Default: NULL) quiet Set TRUE print plot show generated code RStudio 'Viewer' pane. (Default: FALSE) printplot Print plot. (Default: !quiet) showcode Show ggplot2 code generate plot RStudio 'Viewer' pane. (Default: !quiet) addaes, addarg, add Methods customising plot. See documentation details. envir Environment evaluate plot code. May useful calling function inside another function.","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/shape_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a shape plot with ggplot2 — shape_plot","text":"list: plot plot code ggplot2 code generate plot","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/theme_ckb.html","id":null,"dir":"Reference","previous_headings":"","what":"CKB ggplot theme — theme_ckb","title":"CKB ggplot theme — theme_ckb","text":"Based theme_bw","code":""},{"path":"https://neilstats.github.io/ckbplotr/reference/theme_ckb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CKB ggplot theme — theme_ckb","text":"","code":"theme_ckb(   base_size = 11,   base_line_size = base_size/22,   colour = \"black\",   plot.margin = margin(0.5, 1.5, 0.5, 0.5, \"lines\") )"},{"path":"https://neilstats.github.io/ckbplotr/reference/theme_ckb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CKB ggplot theme — theme_ckb","text":"base_size base font size, given pts. base_line_size base size line elements colour Colour non-data aspects plot. (Default: \"black\") plot.margin Margin around entire plot (Default: margin(0.5, 0, 0.5, 0, \"lines\"))","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-0100","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.10.0","title":"ckbplotr 0.10.0","text":"Added ggpreview() preview argument save_figure(). forest_plot() can handle lists xlim (axis limits). Added arguments forest_plot() control column spacing. Improved generated code. Fixes.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-092","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.9.2","title":"ckbplotr 0.9.2","text":"Fix incorrect argument name shape_plot().","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-091","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.9.1","title":"ckbplotr 0.9.1","text":"Fix error using col.lci col.uci arguments shape_plot() forest_plot().","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-090","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.9.0","title":"ckbplotr 0.9.0","text":"+ ckb_style() can now used make ggplot CKB style (instead using plot_like_ckb()). add argument added forest_plot() shape_plot() adding layers (ggplot2 objects) plots. named list used panels argument forest_plot(), names used panel headings. row.labels.heading argument can used add heading row labels forest_plot(). rows (order) included forest_plot() plot set row.labels data frame. (Though rows argument can still used select rows include.) forest_plot() work single data frame (instead list) used. forest_plot() automatically match column names estimates (estimate/est/beta/loghr) standard errors (stderr/std.err/se). Improvements code generated forest_plot() shape_plot(). Old arguments specifying spacing, make_shape_plot() make_forest_plot() functions, removed. minor changes. Various fixes refactoring.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-082","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.8.2","title":"ckbplotr 0.8.2","text":"Fixes.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-081","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.8.1","title":"ckbplotr 0.8.1","text":"blankrows argument forest_plot() now allows decimals negative numbers. Added panel.height argument forest_plot() width argument shape_plot(). Added data.function argument forest_plot(). Corrected calculation text size plots. Upper lower confidence interval limits used imply SE necessary. Refactoring. Updated documentation.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-080","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.8.0","title":"ckbplotr 0.8.0","text":"shape_plot() forest_plot() height panel.width arguments, respectively, set size plotting panels (fix_panel() longer needs used). Arguments height width added plot_like_ckb(). two points achieved using ggh4x package now dependency. Improvements save_figure(). Minor internal improvements.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-071","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.7.1","title":"ckbplotr 0.7.1","text":"default, shape_plot() forest_plot() now use new environment, parent function call, evaluate plot code. mean functions work better called user-defined functions. shape_plot() now digits argument specify number decimal places estimates text. shape_plot() default shape now 16 (square) 22 (filled square) col.group set. Added argument axes plot_like_ckb() control axis lines added. Update ggplot2 3.4.0 Minor fixes improvements.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-070","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.7.0","title":"ckbplotr 0.7.0","text":"Added save_figure() function help save plots PDF files. make_shape_plot() now called shape_plot() make_forest_plot() now called forest_plot(). (original names still work.) forest_plot(), fill cicolour (using panel.width) can now lists. shape_plot(), confidence intervals shorter plotted points can different colour (plotted /points) using panel.height argument. plot_like_ckb() now removes panel background puts small top margin plot. Added gridtext version requirement (>=0.1.5) text formatting works R versions >= 4.2.0 . Internal changes made improve structure. minor fixes updates.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-066","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.6.6","title":"ckbplotr 0.6.6","text":"make_forest_plot() addtext argument can now add multiple tests results /text row. README updated.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-065","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.6.5","title":"ckbplotr 0.6.5","text":"Added arguments control colour non-data components plot. Use R markdown render plot code display Viewer pane RStudio. (Replacing use highlight package.) Updates vignettes.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-064","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.6.4","title":"ckbplotr 0.6.4","text":"Added legend.name legend.position arguments make_shape_plot(). Added DOI badge R-universe installation instructions. Updated license (add ggplot2 reference)","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-063","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.6.3","title":"ckbplotr 0.6.3","text":"Removed make_jasper_forest_plot function. Minor improvements make_forest_plot().","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-062","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.6.2","title":"ckbplotr 0.6.2","text":"Allow use vectors col.left col.right addaes addarg arguments. (different aesthetics arguments can added column.) Add digits argument make_forest_data() make_forest_plot(). make_forest_plot() report results automatic horizontal column positioning spacing. Various minor fixes.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-061","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.6.1","title":"ckbplotr 0.6.1","text":"Fixes","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-060","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.6.0","title":"ckbplotr 0.6.0","text":"New spacing column positioning arguments added make_forest_plot(). default, calculated automatically. New argument addcode make_forest_plot() inserts code generated plot code. New arguments addaes addarg make_shape_plot() make_forest_plot() can used specify additional aesthetics arguments ggplot layers. New argument col.right.parse make_forest_plot() controls columns parsed expressions plotted. New argument row.labels.levels make_forest_plot() make_forest_data() specify columns row.labels data frame use. better handling missing values. make_forest_plot() longer returns data. plot data available .$plot$data New argument envir added make_shape_plot (allows user specify environment evaluating plot code). ggtext::element_markdown() now used y-axis labels make_forest_plot() fix_panel_width() replaced fix_panel() Improved handling unicode characters. Updated documentation. Fixes internal code improvements.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-050","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.5.0","title":"ckbplotr 0.5.0","text":"make_forest_plot(), confidence intervals narrower plotted points can different colour (plotted /points) using panel.width argument. new function fix_panel_width() can used fix width panels forest plot. new argument envir make_forest_plot() allows user specify environment evaluating plotcode. (Helpful using make_forest_plot() inside another function.)","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-041","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.4.1","title":"ckbplotr 0.4.1","text":"Fixed make_jasper_forest_plot.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-040","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.4.0","title":"ckbplotr 0.4.0","text":"Name arguments make_forest_plot(), make_forest_data(), make_jasper_forest_plot() changed. old names still work now message displayed tell new names. Hopefully new names meaningful. code returned make_forest_plot() now run entirely editing. (.e. includes code prepare data plotting, need run make_forest_plot() work.) Use coord_flip() removed make_forest_plot(), x y switched needed. x positions axis labels, text columns, panel headings make_forest_plot() rounded six decimal places. Point estimates CIs outside axis limits plotted make_forest_plot().","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-032","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.3.2","title":"ckbplotr 0.3.2","text":"Arguments col.right.headings col.left.headings make_forest_plot now accept lists, different headings can used plots.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-031","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.3.1","title":"ckbplotr 0.3.1","text":"New argument stroke make_shape_plot make_forest_plot. New argument nullval make_forest_plot, adds vertical reference line value. (default line still added 1 using log scale.) New argument minse make_shape_plot make_forest_plot sets minimum standard error use scaling point size. allows scaling made consistent plots. Argument col.keep available make_forest_plot() keep columns returned data frame. Using addtext argument make_forest_plot(), now need include equals less sign p-value.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-030","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.3.0","title":"ckbplotr 0.3.0","text":"New arguments setting aesthetics overall (value) per-point (specifying column name). Size text lines etc. can controlled base_size base_line_size. Fitted lines can added shape plots lines argument. Log scale plots can controlled logscale argument. Added vignettes improved documentation. small fixes.","code":""},{"path":"https://neilstats.github.io/ckbplotr/news/index.html","id":"ckbplotr-020","dir":"Changelog","previous_headings":"","what":"ckbplotr 0.2.0","title":"ckbplotr 0.2.0","text":"Update version number changes backwards compatible may introduced. Added NEWS.md file track changes package.","code":""}]
